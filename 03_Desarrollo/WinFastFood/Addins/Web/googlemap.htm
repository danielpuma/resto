<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"  xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>FastFood: Motor de Busqueda</title>
    <script src=" http://maps.google.com/?file=api&amp;v=2.x&amp;key=ABQIAAAAkeLTRwA74V5TefSL71wq_xSgO9EIJUkM6iwKIuZbs9XSzTQ4uxSyXKp_SAv4fgR_mEEjg25L4XY_9Q"
      type="text/javascript"></script>
    <style type="text/css">
      body {
        font-family: Verdana, Arial, sans serif;
        font-size: 11px;
        margin: 2px;
      }
      table.directions th {
	background-color:#EEEEEE;
      }
	  
      img {
        color: #000000;
      }
    </style>
    <script language="javascript" src="scripts/getParams.js"></script>
    <script type="text/javascript">
 
    var map;
    var gdir;
    var addressMarker;
    var fso_desde = 1;
    var geocoder;
    var address;
    function initialize() {
      if (GBrowserIsCompatible()) {      
        map = new GMap2(document.getElementById("map_canvas"));
        gdir = new GDirections(map, document.getElementById("directions"));
        map.setUIToDefault();
        GEvent.addListener(map, "click", getAddress);        
        GEvent.addListener(gdir, "load", onGDirectionsLoad);
        GEvent.addListener(gdir, "error", handleErrors);
        geocoder = new GClientGeocoder(); 
        document.getElementById("fromAddress").value = getURLParametersByName("from");
        document.getElementById("toAddress").value = getURLParametersByName("to");
        setDirections( document.getElementById("fromAddress").value, document.getElementById("toAddress").value, 'es');
      }
    }
     function getAddress(overlay, latlng) {
      if (latlng != null) {
        address = latlng;
        geocoder.getLocations(latlng, showAddress);
      }
    }

    function showAddress(response) {
      map.clearOverlays();
      if (!response || response.Status.code != 200) {
        alert("Status Code:" + response.Status.code);
      } else {
        place = response.Placemark[0];
        point = new GLatLng(place.Point.coordinates[1],
                            place.Point.coordinates[0]);
        marker = new GMarker(point);
        map.addOverlay(marker);
        marker.openInfoWindowHtml(
        '<b>FastFood Google Engine:<b><br>' + 
        '<b>Lat. , Long:</b>' + place.Point.coordinates[1] + "," + place.Point.coordinates[0] + '<br>' +
        '<b>Dirección:</b><br>' + place.address + '<br>')
        if(fso_desde==1)
        {
            document.getElementById("fromAddress").value = place.address;            
        }
       else
        {
            document.getElementById("toAddress").value = place.address;            
        }
      }
    }

    function setDirections(fromAddress, toAddress, locale) {
            map.clearOverlays();
            gdir.load("from: " + fromAddress + " to: " + toAddress,{ "locale": locale });

    }

    function handleErrors(){
        
        var hayerror = 0;
	   if (gdir.getStatus().code == G_GEO_UNKNOWN_ADDRESS)
	   {
	     alert("No hay ubicaciones geográficas para la dirección especificada. pueden ser direcciones nuevas o incorrectas.\nError code: " + gdir.getStatus().code);
	      hayerror=1;
	   }
	   else if (gdir.getStatus().code == G_GEO_SERVER_ERROR)
	   {
	     alert("A geocoding or directions request could not be successfully processed, yet the exact reason for the failure is not known.\n Error code: " + gdir.getStatus().code);
	     hayerror=1;
	   }
	   else if (gdir.getStatus().code == G_GEO_MISSING_QUERY)
	   {
	     alert("The HTTP q parameter was either missing or had no value. For geocoder requests, this means that an empty address was specified as input. For directions requests, this means that no query was specified in the input.\n Error code: " + gdir.getStatus().code);
	      hayerror=1;
        }
	//   else if (gdir.getStatus().code == G_UNAVAILABLE_ADDRESS)  <--- Doc bug... this is either not defined, or Doc is wrong
	//     alert("The geocode for the given address or the route for the given directions query cannot be returned due to legal or contractual reasons.\n Error code: " + gdir.getStatus().code);
	     
	   else if (gdir.getStatus().code == G_GEO_BAD_KEY)
	   {
	     alert("The given key is either invalid or does not match the domain for which it was given. \n Error code: " + gdir.getStatus().code);
	      hayerror=1;
        }
	   else if (gdir.getStatus().code == G_GEO_BAD_REQUEST)
	   {
	     alert("A directions request could not be successfully parsed.\n Error code: " + gdir.getStatus().code);
	      hayerror=1;
	   }
	   else {
	        alert("An unknown error occurred.");
	        hayerror=1;
	   }
	   if(hayerror==1)
	   {
	    map.setCenter(new GLatLng(-32.8912906, -68.8482916), 13);
	   }
	}
    
	function onGDirectionsLoad(){ 
      // Use this function to access information about the latest load()
      // results.

      // e.g.
      // document.getElementById("getStatus").innerHTML = gdir.getStatus().code;
	  // and yada yada yada...
	}


    </script>

  </head>
  <body onload="initialize()" onunload="GUnload()">
  
  <h2>FastFood Delivery Service</h2>
  <form action="#" onsubmit="setDirections(this.from.value, this.to.value, 'es'); return false">

  <table>

   <tr><th align="right">Desde:&nbsp;</th>

   <td><input type="text" size="75" id="fromAddress" name="from" onclick="fso_desde=1;"  value=""/></td>
   </tr>
   <tr>
   <th align="right">&nbsp;&nbsp;Hasta:&nbsp;</th>
   <td align="right"><input type="text" size="75" id="toAddress" name="to"  onclick="fso_desde=.0;"    value="" /></td></tr>
    <tr><td colspan="3"><input name="submit" type="submit" value="Calcular Viaje" /></td></tr>
   <tr style="display:none">
   <td >
    
   </td></tr>
   </table>

    
  </form>

    <br/>
    <table class="directions">
    <tr><th>Direcciones</th><th>Mapa</th></tr>

    <tr>
    <td valign="top"><div id="directions" style="width: 300px"></div></td>
    <td valign="top"><div id="map_canvas" style="width: 500px; height: 400px"></div></td>

    </tr>
    </table> 
  </body>
</html>
